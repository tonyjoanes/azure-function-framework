name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  NUGET_VERSION: '6.7.0'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore AzureFunctionFramework.sln
      
    - name: Build solution
      run: dotnet build AzureFunctionFramework.sln --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test AzureFunctionFramework.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
        
    - name: Run security audit
      continue-on-error: true
      run: |
        echo "Checking for vulnerable packages..."
        dotnet list src/AzureFunctionFramework/AzureFunctionFramework.csproj package --vulnerable --include-transitive
        
    - name: Upload coverage reports to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false

  package:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore AzureFunctionFramework.sln
      
    - name: Build solution
      run: dotnet build AzureFunctionFramework.sln --configuration Release --no-restore
      
    - name: Pack NuGet package
      run: dotnet pack src/AzureFunctionFramework --configuration Release --no-build --output ./nupkgs
      
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./nupkgs/*.nupkg
        
    - name: Publish to NuGet (if version changed)
      if: contains(github.event.head_commit.message, '[publish]')
      run: |
        dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
